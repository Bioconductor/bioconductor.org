#+TITLE:     README.org
#+AUTHOR:    Seth Falcon
#+EMAIL:     sfalcon@fhcrc.org
#+DATE:      2010-02-05 Fri
#+DESCRIPTION: 
#+KEYWORDS: 
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 
* Site Maintainer README for bioconductor.org 

** Unix-ish Developer Required Software

*** Required software
**** Ruby

We've tested the site with Ruby 1.8.7, but expect that more recent
versions of Ruby will also work.  Ruby comes standard on OS X and most
Linux distributions.

**** rubygems

You need to have the rubygems package installed.  You can test for
this as:

  : gem --version
  : 1.3.5

If you have the =gem= command, but an older version, you can update
your rubygem install with: =sudo gem update --system=.  On SuSE Linux,
you may need to do =sudo zypper install rubygems=

**** you need these gems

Install the gems used by the website as follows:

  :  sudo gem install nanoc3 BlueCloth rack mime-types haml json \
  :                   rack-cache httparty rake

** Windows Developer Required Software

1. Download and run the one-click ruby installer
   http://www.ruby-lang.org/en/downloads/.  Accept all default
   settings.

2. In a newly opened shell (to pick up configuration changes made by
   the Ruby installer), run the following command to install the
   Ruby gems used by the website:

   : gem install nanoc3 BlueCloth rack mime-types haml json rack-cache httparty rake

3. Install subversion client package.  Windows packages are listed
   here:

       http://subversion.tigris.org/getting.html#binary-packages

   I installed the collabnet package, but had to go through an anoying
   registration process.  The other binaries should be fine and might
   require less hoop jumping.  You will need to open a new terminal
   window to pickup the updated config after installing so that you
   will be able to use the svn command.

4. Follow the developer setup instructions below.


** Developer Setup

*** Checkout the bioconductor.org codebase

   : svn co https://hedgehog.fhcrc.org/bioconductor/trunk/bioconductor.org

*** Build the site

   : cd bioconductor.org
   : rake

*** Run the built-in development server

   : nanoc3 aco

*** Test in a browser by going to http://localhost:3000/

** Overview of site source code

- README.org :: You are reading this file or a file generated from
                this file.

- Rakefile :: A =Rakefile= is to =rake= as a =Makefile= is to =make=.
              You can see the available targets by running =rake -T=
              in the directory containing =Rakefile=.

- Rules :: This is a Ruby syntax file that describes how site content
           is transformed from its source form into its output form
           (this is called filtering), what layout to use (layouts are
           the shared templates), and where to write the output (this
           is called routing).  See the [[http://nanoc.stoneship.org/tutorial/][nanoc tutorial]] and the [[http://nanoc.stoneship.org/manual/][nanoc
           manual]] for details.

- assets :: This directory is not managed by nanoc.  It contains files
            that do not undergo any filtering, layout-ing, or routing.
            Contents of the assets directory are copied to the output
            directory using rsync.

- config.yaml :: Nanoc configuration file for the bioconductor.org
                 site.  This file is written in [[http://www.yaml.org/][YAML]].

- content :: This is where the bulk of the raw (source form) site
             content lives. Important details:

             - Content always has two related files: a =.yaml= file
               containing item attributes and a =.<extension>= file
               containing the raw source content.  You can actually
               use whatever extension you want.

             - The default behavior is that a content file like
               =help.markdown= is filtered into HTML and then written
               to =output/help/index.html=. This scheme allows for
               clean URLs that avoid having a file extension.

- layouts :: This is where the content templates live.

- lib :: Ruby helper functions and nanoc extensions live here.  Files
         in this directory are automatically loaded by nanoc during
         site processing.

- migration :: Documentation and scripts used in the process of
               migrating the bioconductor.org site from Plone to
               nanoc.

- output :: This directory is created when you compile the
            bioconductor.org site using nanoc.  It contains the final
            static HTML and other assets. Deploying the site
            essentially means pushing out an update of the contents of
            output to the live server.

- scripts :: Helper scripts for managing the site live here.

** How to add a page
** How to add course material
You will use a helper script =./scripts/add_course= to add course
material to the site.  PDF files for labs and presentations as well
as course-specific packages and data are *not* stored in svn.  The index
pages that describe the course and provide links to the materials *are*
stored in svn.  The =add_course= script will help with index file
creation and data transfer.

*** =add_course= workflow and important tips

To add a course, you will typically perform the following steps (each
described in detail below):

0. Always from =./scripts/add_course= from the top-level of your
   website Subversion working copy.
1. Run =add_course create COURSE_NAME=
2. Run =add_course index ./COURSE_NAME=
3. Build and preview site
4. Run =add_course sync ./COURSE_NAME=
5. Use svn to commit changes and additions made by =add_course=

*** Using =add_course=

1. Generate a skeleton course directory structure.

   : ./scripts/add_course create seattle-intro

   This will create a =seattle-intro/= directory in the top-level of
   your website working copy -- do not add this directory or any files
   within it to svn.  Inside will be a =course_config.yaml= file that
   will look like this:

   #+begin_src yaml
     title:
       The title of the course goes here
     start_date: 2010-01-27
     end_date: 2010-01-29
     instructors: ["Someone", "Another"]
     location: "Seattle, USA"
     url: https://secure.bioconductor.org/SeattleJan10/
     tags: ["intro", "seattle", "package"]
     description:
       You can put some description text here.
       Must be indented.
   #+end_src

2. Put course materials as files and directories into the skeleton
   directory.  For example, you might end up with a directory like
   that shown below with two subdirectories, =packages= and
   =presentation-slides=, each containing course materials.

   #+begin_example
   seattle-intro
   |-- course_config.yaml
   |-- packages
   |   |-- day1_0.0.1.tar.gz
   |   |-- day2_0.0.1.tar.gz
   |   `-- day3_0.0.1.tar.gz
   `-- presentation-slides
       |-- First-steps-presentation.pdf
       |-- Microarray-presentation.pdf
       |-- annotation-presentation.pdf
       `-- sequence-presentation.pdf
   #+end_example

3. Now you are ready to create the index files.

     : add_course index ./seattle-intro
     : CREATED: content/help/course-notes/2010/01/seattle-intro.(html|yaml)
     : COPIED for preview:
     :   src: ./seattle-intro/*
     :   dst: output/help/course-notes/2010/01/seattle-intro/
     : NEXT STEPS: run 'rake devserver' and preview at http://localhost:3000/

   This will create a course index content item in content filed
   appropriately based on the metadata provided in
   =course_config.yaml=.  It will also copy the files and directories
   you created into the output directory so that you can do a full
   preview after compiling the site.

4. If everything looks good, you can sync the data files to the web
   server:

      : add_course sync ./seattle-intro
      : SYNC:
      :  src: ./seattle-intro
      :  dst: webadmin@cobra:/extra/www/bioc/help/course-notes/2010/
      : NEXT STEPS: svn add/checkin changes in contents

5. Finally, add the new course index file that was generated in the
   content directory and commit.

*** Modifying an existing course

You can edit the pages for an existing course by editing the files in
=./content=.  If you need to add or modify data files, you will need
to rerun =./scripts/add_course sync=.  The sync performed by
=add_course= will add new files and replace existing files, but *will
not delete files already on the server*.  To remove a file from a
course, you will need to ssh to the remote server and remove manually.

** nginx installation
#+begin_src sh
    ./configure \
      --user=nginx \
      --group=nginx \
      --with-http_ssl_module \
      --with-http_gzip_static_module
    
    make
    sudo make install
#+end_src

nginx paths:

  : path prefix: "/usr/local/nginx"
  : binary file: "/usr/local/nginx/sbin/nginx"
  : configuration file: "/usr/local/nginx/conf/nginx.conf"
  : error log file: "/usr/local/nginx/logs/error.log"
  : http access log file: "/usr/local/nginx/logs/access.log"

*** creating an nginx user (SuSE Linux)

    : sudo useradd -c "nginx worker" -d /usr/local/nginx -s /bin/false \
    :              -g www -G www nginx

*** nginx config

Followed basic config.

#+begin_example
user  nginx www;
gzip  on;
gzip_types text/plain text/css text/javascript;

server {
    listen       80;
    server_name  merlot2.fhcrc.org www.merlot2.fhcrc.org;

    #charset koi8-r;

    #access_log  logs/host.access.log  main;

    location / {
        root   sites/bioconductor.org;
        index  index.html index.htm;
    }
#+end_example

*** scheduled update

Created a rake task for local deployment:

#+begin_src ruby
task :deploy_merlot2_local do
  dst = '/usr/local/nginx/sites/bioconductor.org'
  site_config = YAML.load_file("./config.yaml")
  output_dir = site_config["output_dir"]
  system "rsync -gvprt --partial --exclude='.svn' #{output_dir}/ #{dst}"
end
#+end_src

Added a script to an svn checkout working copy:

#+begin_src sh
    #!/bin/bash
    svn update && rake default deploy_merlot2_local
#+end_src

Added chrontab entry:

#+begin_example
    PATH=/usr/bin:/bin
    MAILTO=sfalcon@fhcrc.org
    
    # test for bioconductor.org nanoc site gen
    */5 * * * *  cd $HOME/src/SVN/bioconductor.org;./update_site >> cron.log 2>&1
#+end_example

Started nginx as: =sudo /usr/local/nginx/sbin/nginx=

