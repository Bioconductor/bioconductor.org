{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Launch BioC2012 AMI",

  "Parameters" : {
    "InstanceType" : {
      "Description" : "Type of EC2 instance to launch - see http://aws.amazon.com/ec2/instance-types/",
      "Type" : "String",
      "Default" : "m1.large",
      "AllowedValues": ["t2.micro","t2.small","t2.medium","t2.large","m4.large","m4.xlarge","m4.2xlarge","m4.4xlarge","m4.10xlarge","m3.medium","m3.large","m3.xlarge","m3.2xlarge","c4.large","c4.xlarge","c4.2xlarge","c4.4xlarge","c4.8xlarge","c3.large","c3.xlarge","c3.2xlarge","c3.4xlarge","c3.8xlarge","r3.large","r3.xlarge","r3.2xlarge","r3.4xlarge","r3.8xlarge","i2.xlarge","i2.2xlarge","i2.4xlarge","i2.8xlarge","d2.xlarge","d2.2xlarge","d2.4xlarge","d2.8xlargeg2.2xlarge","g2.8xlarge","t1.micro", "m1.small", "m1.medium", "m1.large",
        "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "c1.xlarge",
        "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", 
        "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge",
        "h1.4xlarge", "hs1.8xlarge"],
      "ConstraintDescription": "Choose a valid EC2 instance type from http://aws.amazon.com/ec2/instance-types/"
      }
  },

  "Resources" : {
      
      "CfnUser":{
         "Type":"AWS::IAM::User",
         "Properties":{
            "Path":"/",
            "Policies":[
               {
                  "PolicyName":"root",
                  "PolicyDocument":{
                     "Statement":[
                        {
                           "Effect":"Allow",
                           "Action":["cloudformation:DescribeStackResource", "ec2:DescribeInstances",
                            "ec2:CreateTags"],
                           "Resource":"*"
                        }
                     ]
                  }
               }
            ]
         }
      },
      "HostKeys":{
         "Type":"AWS::IAM::AccessKey",
         "Properties":{
            "UserName":{
               "Ref":"CfnUser"
            }
         }
      },
     
      
    "Ec2Instance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
        "ImageId" : "ami-99ec45f0",
        "InstanceType": {"Ref": "InstanceType"},
        "Tags": [{"Key": "Name", "Value": "BioC2012 AMI"}],
        "UserData":{
           "Fn::Base64":{
              "Fn::Join":[
                 "",
                 [
                    "#!/bin/bash\n",
                    "rm -rf /usr/local/bioc_cloud ",
                    " && ",
                    " svn co --no-auth-cache --non-interactive --username readonly --password readonly https://hedgehog.fhcrc.org/bioconductor/trunk/madman/Rpacks/BiocCloud/inst/CloudFormation/ /usr/local/bioc_cloud",
                    " && ",
                    "/usr/local/bioc_cloud/bootstrap_bioc2012.rb",
                    " --wait-handle ",
                    "\"",
                    { "Ref": "WaitHandle"},
                    "\"",
                    " > /root/startup.log 2>&1 ",
                    "\n"
                 ]
              ]
           }
        }
        
      }
    },
    
    
    
    
    
    "WaitHandle" : {
             "Type" : "AWS::CloudFormation::WaitConditionHandle",
             "Properties" : {
             }
        },
        
        
        "myWaitCondition" : {
             "Type" : "AWS::CloudFormation::WaitCondition",
             "DependsOn" : "Ec2Instance",
             "Properties" : {
                 "Handle" : { "Ref" : "WaitHandle" },
                  "Timeout" : "600",
                  "Count" : "1"
             }
         },

         "InstanceSecurityGroup" : {
              "Type" : "AWS::EC2::SecurityGroup",
              "Properties" : {
                "GroupDescription" : "Enable HTTP access via port 8787",
                "SecurityGroupIngress" : [ {
                  "IpProtocol" : "tcp",
                  "FromPort" : "8787",
                  "ToPort" : "8787",
                  "CidrIp" : "0.0.0.0/0"
                },
                {
                    "IpProtocol": "tcp",
                    "FromPort": "80",
                    "ToPort": "80",
                    "CidrIp": "0.0.0.0/0"
                }


                 ]
              }
            },
  
    
    "InstanceSecurityGroupIngress": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
            "GroupName": { "Ref": "InstanceSecurityGroup" },
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535",
            "SourceSecurityGroupName": { "Ref": "InstanceSecurityGroup" }
        }
    }
    
  },

  "Outputs" : {
        "URL" : {
            "Description" : "URL of RStudio Server",
            "Value" :  { "Fn::Join" : [ "", [ "http://", 
                { "Fn::GetAtt" : [ "Ec2Instance", "PublicDnsName" ]}]]}
          },
        "Username": {
            "Description": "Log in with this username",
            "Value": "workshop"
        },
        "Password": {
            "Description": "Log in with this password",
            "Value": "bioc"
        },
        "Info": {
            "Description": "Message",
            "Value": "Delete stack when done to avoid charges."
        }
  }
}