{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Create an MPI cluster for running Bioconductor tasks in the cloud",

  "Parameters" : {
    "BiocVersion" : {
      "Description" : "Bioconductor Version. <%=config['release_version']%>  is recommended.",
      "Type" : "String",
      "Default": "<%=config['release_version']%>",
      "AllowedValues": ["2.11", "2.12", "2.13", "2.14", "3.0", "3.1", "3.2"],
      "ConstraintDescription": "Must be 2.11, 2.12, 2.13, 2.14, 3.0, 3.1 or 3.2"
    },
    "InstanceType" : {
      "Description" : "Type of EC2 instance to launch - see http://aws.amazon.com/ec2/instance-types/",
      "Type" : "String",
      "Default" : "t1.micro",
      "AllowedValues": ["t1.micro", "m1.small", "m1.medium", "m1.large",
        "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "c1.xlarge",
        "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", 
        "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge",
        "h1.4xlarge", "hs1.8xlarge"],
      "ConstraintDescription": "Choose a valid EC2 instance type from http://aws.amazon.com/ec2/instance-types/"
      },
      "KeyName": {
          "Description": "Name of a Key Pair to use to SSH to your instance (remove this).",
          "Type": "String",
          "Default": "bioc-default"
      }
  },
  "Mappings" : {
    "BiocAMIMap" : {
      "2.8" : {
          "AMI" : "<%=config['ami_ids']['bioc2_8']%>"
      },
      "2.9" : {
          "AMI" : "<%=config['ami_ids']['bioc2_9']%>"
      },
      "2.10" : {
          "AMI" : "<%=config['ami_ids']['bioc2_10']%>"
      },
      "2.11" : {
          "AMI" : "<%=config['ami_ids']['bioc2_11']%>"
      },
       "2.12" : {
           "AMI" : "<%=config['ami_ids']['bioc2_12']%>"
      },
      "2.13" : {
           "AMI" : "<%=config['ami_ids']['bioc2_13']%>"
       },
       "2.14": {
           "AMI" : "<%=config['ami_ids']['bioc2_14']%>"
       },
       "3.0": {
           "AMI" : "<%=config['ami_ids']['bioc3_0']%>"
       },
       "3.1": {
           "AMI" : "<%=config['ami_ids']['bioc3_1']%>"
       },
       "3.2": {
           "AMI" : "<%=config['ami_ids']['bioc3_2']%>"
       }
       
    }
  },

  "Resources" : {
    "Ec2Instance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
        "KeyName" : { "Ref" : "KeyName" },
        "ImageId" : { "Fn::FindInMap" : [ "BiocAMIMap", { "Ref" : "BiocVersion" }, "AMI" ]},
        "InstanceType": {"Ref": "InstanceType"},
        "Tags": [{"Key": "Name", "Value": "Bioconductor Cluster Master AMI Started From Template (with ssh)"}],
        "UserData": {"Fn::Base64": {"Fn::Join": ["", [
        "#!/bin/bash -ex", "\n",
        "bootstrap_cluster_master --access-key --secret-key --waithandle --instance-type --num-instances",
        "mpiutil -a xxx -s yyy -w 1 -n mpiworker1 -t t1.micro", "\n",
        "curl -X PUT -H 'Content-Type:' --data-binary '{\"Status\" : \"SUCCESS\",",
                                                                   "\"Reason\" : \"The application myapp is ready\",",
                                                                   "\"UniqueId\" : \"myapp\",",
                                                                   "\"Data\" : \"Done\"}' ",
                          "\"", {"Ref" : "WaitForInstanceWaitHandle"},"\"\n"]]}}
      }
    },
    
    "WaitForInstanceWaitHandle" : {
         "Type" : "AWS::CloudFormation::WaitConditionHandle",
         "Properties" : {
         }
       },
       
       "WaitForInstance" : {
           "Type" : "AWS::CloudFormation::WaitCondition",
           "DependsOn" : "Ec2Instance",
           "Properties" : {
             "Handle" : {"Ref" : "WaitForInstanceWaitHandle"},
             "Timeout" : "120"
           }
         },
    
    "InstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access via port 80",
        "SecurityGroupIngress" : [
         {
          "IpProtocol" : "tcp",
          "FromPort" : "80",
          "ToPort" : "80",
          "CidrIp" : "0.0.0.0/0"
        } ,
        {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
        }
        ]
      }
    },
    
    "InstanceSecurityGroupIngress": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
            "GroupName": { "Ref": "InstanceSecurityGroup" },
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535",
            "SourceSecurityGroupName": { "Ref": "InstanceSecurityGroup" }
        }
    }
    
  },



  "Outputs" : {
        "URL" : {
            "Description" : "URL of RStudio Server",
            "Value" :  { "Fn::Join" : [ "", [ "http://", 
                { "Fn::GetAtt" : [ "Ec2Instance", "PublicDnsName" ]}]]}
          },
        "Username": {
            "Description": "Log in with this username",
            "Value": "ubuntu"
        },
        "Password": {
            "Description": "Log in with this password",
            "Value": "bioc"
        },
        "Info": {
            "Description": "Message",
            "Value": "URL will be valid in a few seconds. Delete stack when done to avoid charges."
        },
        "SSHCommand": {
            "Description": "SSH Command",
            "Value" :  { "Fn::Join" : [ "", [ "ssh -i ", { "Ref": "KeyName"}, ".pem ubuntu@",
                { "Fn::GetAtt" : [ "Ec2Instance", "PublicDnsName" ]}]]}
            
        }
  }
}