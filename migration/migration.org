* Migrating Content From Plone
** Plone migration: use wget
- Tried Enfold Systems desktop tool, it produces same raw HTML as
  wget.
- wget script:
#+BEGIN_SRC sh
#!/bin/bash

wget --limit-rate=500k \
     --mirror \
     --convert-links \
     --ignore-case \
     --exclude-directories=packages,data,repository,checkResults \
     --output-file=mirror.log \
     http://bioconductor.org
#+END_SRC
- Result is 1533596 bytes  breakdown is:
| Size | Path                            |
| 32K  | bioconductor.org/GettingStarted |
| 1.9M | bioconductor.org/overview       |
| 1.1M | bioconductor.org/download       |
| 44M  | bioconductor.org/docs           |
| 61M  | bioconductor.org/pub            |
| 1.4G | bioconductor.org/workshops      |
| 2.4M | bioconductor.org/News           |
| 32K  | bioconductor.org/developers     |
| 104K | bioconductor.org/services       |
| 44K  | bioconductor.org/mogr           |
| 1.5G | bioconductor.org/               |

There are some large .gz and .zip files mixed in there that I believe
take up the bulk of the space under /workshops.

** Converting the Workshop content

One issue is that we have a lot of static assets in workshops -- all
of the *.pdf and *.R files and nanoc isn't great and handling those.
Either we create each of those as a content item or we store them
outside of content/ and rsync them into output/.  But that leaves the
index pages that need to be either converted (current existing pages
are full of Plone cruft on export) or created -- we were relying on
Plone's folder index generation and essentially need to come up with
our own scheme.

What we come up with needs to make it easy to add new course materials
and have an index generated.

Go through workshops/, for each directory create a corresponding item
and set its contents to be a simple listing of what's in the
directory.  Need to special case existing index pages and convert
those instead.

Do we want to svn checkin all of the content, by which I mean the
static assets?  Currently the workshops directory (possibly
incomplete) comprises 1.2GB.

I have the start of a script to extract content from existing
Plone-crufted pages.

** Redirect existing URLs to new site: How?
Using Apache and mod_rewrite, this is easy to accomplish using a
.htaccess file with full paths and/or regex redirecting with desired
moved permanently HTTP status code.  Advantage of a =.htaccess= file
approach is that it will be easily managed in svn.

Here's what the =.htaccess= file will look like:
#+BEGIN_EXAMPLE
<IfModule mod_rewrite.c>
#RewriteEngine On
#RewriteBase /
Redirect 301 /fizzle /foozle
</IfModule>
#+END_EXAMPLE

** Convertion of workshops course material content
See details in [[../README.org][README]] for how this will work
*** Created migration/workshop.rb proof-of-concept
- Converts existing index pages (run once)
- Creates index pages when none found (intended to run anytime new
  course material is added).
- Uses Ruby XML/HTML parsing library to clean extracted HTML pages.
**** Usage needs refinement
- Call =import_workshop_index_files= for the one-time index converting
  functionality.
- Call =build_file_index_files= for the on-demand index creation.
  This tags content as auto-generated so that only auto-generated
  indices get rebuilt.
- Need to put a simple CLI in place with help?

** Page Template Types
*** Homepage
*** Install
*** Help
*** course main index page
*** course Year summary page
*** About
*** Content page
- all sub-pages of /about
- many pages under /help
*** Events
**** Event
*** Package homepage
*** List of packages page

*** Blog archive
Includes by tag and by date
*** Blog post
*** Blog tag
** Plone html cleanup using tidy
#+begin_src sh
tidy -utf8 -asxhtml -bare -clean -indent
#+end_src

#+begin_src ruby
  require 'find'
  
  Find.find('.') do |f|
    if !f.match(/\.git/)
      if !File.basename(f).match(/\./)
        puts f
      end
    end
  end
#+end_src
** Browser stats from google analytics

Overview of current bioconductor.org traffic

| Browser | Visits | Percent |
| Firefox | 9511   | 50.3    |
| IE      | 4455   | 23.6    |
| Safari  | 3227   | 17.1    |
| Chrome  | 1087   | 5.75    |
| Opera   | 279    | 1.5     | 

Breakdown by version

Firefox
| Version | Visits | Percent |
|   3.5.5 |   4119 |    43.3 |
|   3.5.6 |   1786 |    18.8 |
|  3.0.15 |   1331 |    14.0 |
|  3.0.16 |    465 |     4.9 |
|   3.5.3 |    176 |     1.9 |

Internet Explorer
| Version | Visits | Pecent |
|     8.0 |   1712 |   38.4 |
|     7.0 |   1599 |   35.9 |
|     6.0 |   1141 |   25.6 |
|    5.01 |      1 |   0.02 |
